"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[601],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5572:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:4},l="Configuration",u={unversionedId:"stopes/configuration",id:"stopes/configuration",title:"Configuration",description:"We use hydra for configuration. You should probably check out the hydra",source:"@site/docs/stopes/configuration.md",sourceDirName:"stopes",slug:"/stopes/configuration",permalink:"/stopes/docs/stopes/configuration",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/stopes/configuration.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"quickstartSidebar",previous:{title:"Composition (aka pipelining)",permalink:"/stopes/docs/stopes/pipelining"},next:{title:"Caching/Memoization",permalink:"/stopes/docs/stopes/cache"}},c={},p=[],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"We use hydra for configuration. You should probably check out the hydra\ntutorial:\n",(0,a.kt)("a",{parentName:"p",href:"https://hydra.cc/docs/tutorials/intro"},"https://hydra.cc/docs/tutorials/intro"),"\nbut it's not a requirement."),(0,a.kt)("p",null,"Modules ",(0,a.kt)("inlineCode",{parentName:"p"},"__init__")," HAVE to take either a structured configuration as parameter\nor an ",(0,a.kt)("inlineCode",{parentName:"p"},"omegaconf.DictConfig"),". A structured configuration is a ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/dataclasses.html"},"python\ndataclass"),", e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from dataclasses import dataclass\nfrom omegaconf import MISSING\n\n@dataclass\nclass MyModuleConfig:\n    lang: str = MISSING\n    spm_model: str = "/path/to/my/model.spm"\n')),(0,a.kt)("p",null,"Structured configs make it easier to track what is expected as a config for a\nmodule and makes it self documenting. But you can also just use a DictConfig if you prefer."),(0,a.kt)("p",null,"If you implement the init method of the module, make sure to call\n",(0,a.kt)("inlineCode",{parentName:"p"},"super().__init__(config) "),"so that the module system knows about your module\nsetup. You can then access ",(0,a.kt)("inlineCode",{parentName:"p"},"self.config "),"anywhere in your module after\ninitialization"),(0,a.kt)("p",null,"Actual configs live in YAML files in the config/module/ folder and should look\nlike this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# @package module\n_target_: stopes.modules.MyModule\nconfig:\n    lang: null\n    spm_model: /path/to/my/model.spm\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"_target_")," field should point to the full python module path of your module"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"config")," should contain the config of your module."),(0,a.kt)("p",null,"You should save this in a file with your model name. You could have multiple\nversions of your config, save them with the same ",(0,a.kt)("inlineCode",{parentName:"p"},"_target_")," but different file\nnames (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"my_module_large_spm.yaml"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"my_module_small_spm.yaml"),", etc.)."),(0,a.kt)("p",null,"The yaml config file should contain the baseline configuration for your module\nand things that you do not expect to change often. In hydra terms, you are\nadding a possible option for a config group (the module group: see ",(0,a.kt)("inlineCode",{parentName:"p"},"@package\nmodule"),")"),(0,a.kt)("p",null,"You can use hydra/",(0,a.kt)("a",{parentName:"p",href:"https://omegaconf.readthedocs.io/en/2.1_branch/custom_resolvers.html#built-in-resolvers"},'omegaconf\n"resolvers"'),"\nto depend on other bits of configs or environment variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# @package module\n_target_: stopes.modules.MyModule\nconfig:\n    lang: null\n    laser_path: /laser/is/here\n    laser_model: ${module.my_module.laser_path}/model1.mdl\n    spm_model: ${oc.env:SPM_MODEL}\n")),(0,a.kt)("p",null,"Note: try not to rely too much on environment variables as we want these files\nto be the base for reproducibility and shareability of the module configurations\nyou experiment with. Relying on special environment variables will make this\nhard."),(0,a.kt)("p",null,"You can use hydra config composition if you want your config to inherit or\nconfigure a subpart of your config, see\n",(0,a.kt)("a",{parentName:"p",href:"https://hydra.cc/docs/patterns/extending_configs"},"https://hydra.cc/docs/patterns/extending_configs")))}d.isMDXComponent=!0}}]);